#!/bin/bash

clear
while [ -z "$NAME" ];do
    echo "Podaj nazwe konteneru:"
    read NAME
    if docker ps -a --format '{{.Names}}' | grep -q "^$NAME-httpd";then
        clear
        echo "Kontener o takiej nazwie juz istnieje"
        NAME=""
    fi
done
while [ -z "$PHP_VERSION" ];do
    clear
    echo "Podaj wersję php:"
    read PHP_VERSION
    docker image pull "php:${PHP_VERSION}-fpm-alpine" &>> /dev/null
    if [ 0 -ne "$?" ];then
        PHP_VERSION=''
    fi
done
clear
echo "Podaj nazwę hosta http:"
read HOSTNAME
echo "Podaj hasło do rootów"
read ROOT_PASSWORD
echo "Podaj nazwę bazy danych:"
read DB_NAME
echo "Podaj nazwę użytkownika:"
read DB_USER
echo "Podaj hasło"
read DB_PASSWORD
clear
DIR="$(dirname $(readlink -f "$0"))"
APACHE_DIR="$DIR/../lib/apache/"
docker network create $NAME-localhost
docker build \
    --pull \
    -t "$NAME-php-$PHP_VERSION-fpm" \
    -f "$APACHE_DIR/build-php" \
    --build-arg PHP_VERSION=$PHP_VERSION \
    --build-arg ROOT_PASSWORD=$ROOT_PASSWORD \
    --no-cache \
    $APACHE_DIR
mkdir ./sites/$NAME
cp "$APACHE_DIR/configs/www.conf" "./sites_configs/php/$NAME.conf"
cp "$APACHE_DIR/configs/php.ini" "./sites_configs/php/$NAME.ini"
docker run -d \
    --name "$NAME-php-$PHP_VERSION-fpm" \
    -v "./sites/$NAME:/var/www/html/" \
    -v "./sites_configs/php/$NAME.conf:/usr/local/etc/php-fpm.d/docker.conf" \
    -v "./sites_configs/php/$NAME.ini:/usr/local/etc/php/php.ini" \
    -v "$NAME-sessions:/var/lib/php/session/" \
    --env "PHP_INI_DIR=/usr/local/etc/php" \
    --network "$NAME-localhost" \
    --hostname php-fpm \
    --user container \
    --restart always \
    "$NAME-php-$PHP_VERSION-fpm"
docker build \
    --pull \
    -t "$NAME-httpd" \
    -f "$APACHE_DIR/build-httpd" \
    --no-cache \
    $APACHE_DIR
cp "$APACHE_DIR/sites/default.conf" "./sites_configs/apache/$NAME.conf"
docker run -d \
    --name "$NAME-httpd" \
    -v "./sites/$NAME:/var/www/html/" \
    -v "./sites_configs/apache/$NAME.conf:/usr/local/apache2/sites/default.conf" \
    -v "$NAME-sessions:/var/lib/php/session/" \
    --network "$NAME-localhost" \
    --network "nginx-apache-reverse" \
    --hostname "$HOSTNAME" \
    "$NAME-httpd"
docker run -d \
    --name "$NAME-db" \
    --hostname mariadb \
    -v "$NAME-db:/var/lib/mysql/" \
    --env "MARIADB_DATABASE=$DB_NAME" \
    --env "MARIADB_USER=$DB_USER" \
    --env "MARIADB_PASSWORD=$DB_PASSWORD" \
    --env MARIADB_ROOT_PASSWORD=$ROOT_PASSWORD \
    --network "$NAME-localhost" \
    --restart always \
    mariadb:11.2.2
cp "$DIR/../lib/configs/reverse.conf" "$DIR/../sites_configs/nginx/$NAME.conf"
declare -A PARAMS=(
    ["HOSTNAME"]="$HOSTNAME"
)
for key in "${!PARAMS[@]}";do
    sed -i "s/\${$key}/${PARAMS[$key]}/g" "$DIR/../sites_configs/nginx/$NAME.conf"
done
docker container restart nginx-reverse-proxy